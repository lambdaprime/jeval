#!/bin/bash

#set -x

# User can make a symbolic link to the jeval file
# In that case JEVAL_PATH should be resolved and
# point to the original file, otherwise we would
# not be able to find all jeval libs and jars it
# depends on
JEVAL_PATH=$(readlink "$0")
if [ $? -ne 0 ]; then
   JEVAL_PATH="$0"
fi
JEVAL_PATH=$(dirname "$JEVAL_PATH")

# When started under cygwin or MSYS we need to 
# process classpath in the way that Java on Windows
# expects it
CP_SEP=":"
if [[ "$OS" =~ Windows ]]; then
    JEVAL_PATH=$(cygpath -d "$JEVAL_PATH")
    CP_SEP=";"
fi

# Java accepts classpath either from -cp or CLASSPATH but not from both
# Because parsing JAVA_ARGS is harder than just prepend to CLASSPATH
# this script will only work if user pass classpath through CLASSPATH
# and not through JAVA_ARGS
if [ -z "${CLASSPATH}" ]; then
    CLASSPATH="${JEVAL_PATH}/libs/*"
else
    CLASSPATH="${JEVAL_PATH}/libs/*${CP_SEP}${CLASSPATH}"
fi

# We cannot use -jar option because it ignores -cp and $CLASSPATH
# and we want to let user add new jars to classpath
java ${JAVA_ARGS} -Xnoclassgc -noverify -cp "${CLASSPATH}" id.jeval.Main "$@"
