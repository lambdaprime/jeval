/**
 * gradle clean build
 */
plugins {
    id 'java'
}

apply plugin : 'eclipse'

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    testImplementation project(':jeval')
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.4.2')
    testImplementation('org.junit.jupiter:junit-jupiter-params:5.4.2')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.4.2')
}

sourceCompatibility = '1.9'
targetCompatibility = '1.9'

String testDir = "$buildDir/jeval"
String testSrcDir = "$projectDir/src/test"

// Gradle has no UnZip task so we reuse Copy for that
task myTest(type: Copy) {
    mkdir file(testDir)
    from zipTree("${project.rootDir}/jeval/release/${releaseFileName}")
    into "$buildDir"
}

task myTestFile(type: Exec) {
    standardInput = System.in
    commandLine testDir + "/jeval", testSrcDir + "/test.java"
}

task myTestReadme(type: Exec) {
    standardInput = System.in
    commandLine "bash", testSrcDir + "/test-readme.sh"
    environment("JEVAL_PATH", testDir)
}

task myTestSnippet(type: Exec) {
    standardInput = System.in
    commandLine "bash", testSrcDir + "/test.sh"
    environment("JEVAL_PATH", testDir)
}

test {
    useJUnitPlatform()
    filter {
        exclude '**/module-info.class'
    }
}

test.dependsOn myTest
test.dependsOn myTestFile
test.dependsOn myTestSnippet
test.dependsOn myTestReadme
myTestFile.mustRunAfter myTest
myTestSnippet.mustRunAfter myTest
